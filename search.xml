<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[javascript基本对象,数据类型,常量,变量]]></title>
      <url>%2F2017%2F04%2F10%2F07-01-javascript%2F</url>
      <content type="text"><![CDATA[javascript基本对象,数据类型,常量,变量javascript数据类型 基本数据类型 Number String Boolean Null Undefined 混合数据类型 Object js中变量是松散类型的，因此有时我们需要检测变量的数据类型 typeof操作符可以检测变量的数据类型（输出的是一个关于数据类型的字符串） 数字(Number) 介绍Number类型包含整数和浮点数（浮点数数值必须包含一个小数点，且小数点后面至少有一位数字）两种值 例如:var x1=34.00; //使用小数点来写var x2=34; //不使用小数点来写 极大或极小的数字可以通过科学（指数）计数法来书写： 例：var y=123e5; // 12300000var z=123e-5; // 0.00123 NaN:非数字类型 特点：涉及到的 任何关于NaN的操作，都会返回NaN NaN不等于自身。 例：var ab = &quot;a1&quot;;console.log(ab/10);// NaNconsole.log(NaN == NaN);// false; ###字符串（string） 例：var carname=&quot;Bill Gates&quot;;var answer=&quot;He is called &#39;Johnny&#39;&quot;; 字符串是存储字符（比如 “Bill Gates”）的变量。 字符串可以是引号中的任意文本，可以使用单引号或双引号，只要不匹配包围字符串的引号即可 注： JavaScript对大小写敏感 ###布尔（boolean） 例：var x=truevar y=false 布尔（逻辑）只能有两个值：true 或 false。 Undefined Undefined 这个值表示变量不含有值。* 可以通过将变量的值设置为 null 来清空变量 null null类型被看做空对象指针，null类型也是空的对象引用。只有一个值，即null值，所以，在用typeof 操作符去检测null类型的值时，结果是object类型。如果你定义了一个变量，但是想在以后把这个变量当做一个对象来用，那么最好将该对象初始化为null值 ###对象（object） 对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔： 例：var person={firstname : “Bill”,lastname : “Gates“}; 数组为混合数据类型中的一种 常量Constant：不变的值 const constantName = value1； 常量名首字符为字母或下划线，其后可有数字。 value1为直接量或表达式。 1个const关键字可定义1个或多个常量。 内置常量：JS中Infinity表无穷大的数值，-indinity表无穷小.NaN表非数值。 例：const a = 10; alert(a) ##变量 概念:变量是存取数字、提供存放信息的容器。对于变量，必须明确变量的命名、变量的类型、变量的声明及其变量的作用域。命名规范 变量命名规范: 变量必须以字母或下划线开头，后可以跟字母、数字、下划线，不能有空格或特殊字符等。 不用使用Javascript中的关键字作为变量，如var,true,double等。 在对变量命名时，最好把变量的意义与其代表的意思对应起来，以免发现错误。 变量的类型： 整数变量：x=100; 字符串变量：y=“125” 布尔型变量：xy=True 实型变量：cost=19.5 变量的声明 JavaScript可以在使用前先声明，并可赋值。变量声明用可用命令var; 例：var mytest;该例子定义了一个mytest变量，但没有赋予其值例：var mytest=“This is a book”该例子定义了变量并为其赋予了值。 变量的作用域： 变量分为全局变量和局部变量。 全局变量是定义在所有函数体乊外，其作用范围是整个函数 局部变量是定义在函数体乊内，只对其该函数是可见的，而对其它函数则是不可见的。 函数体内可以访问父级函数的变量，父级函数不能访问子函数的变量。注：在声明变量时凡是没有var关键字，而直接赋值的变量均为全局变量 ## JavaScript 的基本对象 对象包括：系统标准类对象 和 自定义对象 标准类对象: 字符串对象String、 日期对象Date、 数组对象Array、 数字对象Number 、 数学对象Math、 正则表达式对象RegExp *自定义类对象:自定义的包含属性和方法的对象 例：var person={ firstname : "Bill", lastname : "Gates", eat : function(){} };]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[JavaScript基础引入]]></title>
      <url>%2F2017%2F04%2F10%2F06-01-javascript%2F</url>
      <content type="text"><![CDATA[javascript基础简介 轻量级、直译式客户端脚本语言。 可被所有浏览器执行，实现网页的劢态功能。 揑入 HTML 页面后，可由所有的现代浏览器执行应用场景 操作页面元素，动态改变页面内容动态改变表格内容 编写页面动态效果轮播图层的切换 和 树形菜单等 数据的客户端验证－减轻服务器端压力注册表单验证 通过ajax和后端语言实现数据交互 组成: ECMAScript BOM DOM ECMAScript 概念：JavaScript的核心，描述了语言的基本语法和数据类型，ECMAScript是一套标准，定义了一种语言（比如JS）是什么样子。 编码遵循ECMAScript标准 BOM(浏览器对象模型) 概念:BOM是用于描述这种对象不对象乊间层次关系的模型，浏览器对象模型提供了独立于内容的、可以不浏览器窗口进行互劢的对象结构。 BOM由多个对象组成，其中代表浏览器窗口的Window对象是BOM的顶层对象，其他对象都是该对象的子对象。 DOM(文档对象模型) 概念:W3C组织推荐的处理可扩展置标语言的标准编程接口。 DOM是以面向对象方式描述的文档模型。 DOM定义了表示和修改文档所需的对象、这些对象的行为和属性以及这些对象乊间的关系。可以把DOM认为是页面上数据和结构的一个树形表示，丌过页面当然可能并丌是以这种树的方式具体实现。 ##javascript 使用方法 html内嵌javascript代码 &lt;script type=&quot;text/javascript&quot;&gt; //JavaScript 语句&lt;/script &gt; 外部JS文件 &lt;script src=&quot;hello.js&quot; language=&quot;javascript&quot;&gt;&lt;/script&gt; 行内编写方式 &lt;input name=&quot;btn&quot; type=&quot;button&quot; value=&quot;弹出消息框&quot;onclick=&quot;javascript:alert(&#39;欢迎你&#39;);&quot;/&gt; 事件监听 onload事件:是在页面或图片加载完成后立即执行的事件获取元素 getElementById()：获取指定 ID 的第一个对象引用 getElementsByName()：通过NAME属性获Document中指定名称对象的集合 getElementsByTagName()：使用指定的标签名返回所有的元素，这些元素是您在使用此方法时所处的元素的后代 JavaScript 的调试工具及调试方法 调试工具:Firebug工具 安装：火狐浏览器 - 选顷 – 附加组件 – 搜索Firebug添加即可。安装完成，按键盘f12即可打开Firebug Chrome和ie自带调试工具，不需要安装 调试方法 使用Firebug的HTML 、 CSS、脚本顷查看页面的html标签、 CSS文件、 JS文件。 Firebug控制台: 如果页面报错，会在控制台显示：包括错误原因和行号 控制台最下边的输入框可以输入js代码，提交浏览器执行 利用js的console方法，可以在控制台输出js代码中的值、对象、 DOM等，以方便查看对象的结构常用方法：console.log() console.dir()]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[金立手机页面完成]]></title>
      <url>%2F2017%2F04%2F10%2F0501-prodoctlist%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[金立手机页面导航+banner]]></title>
      <url>%2F2017%2F04%2F10%2F0401-css%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[css 定位 浮动]]></title>
      <url>%2F2017%2F04%2F10%2F0301-css%2F</url>
      <content type="text"><![CDATA[css 定位 浮动定位 概念 :CSS 为定位和浮动提供了一些属性，利用这些属性，可以建立列式布局，将布局的一部分与另一部分重叠，还可以完成多年来通常需要使用多个表格才能完成的任务。 position属性: static:没有特别的设定，遵循基本的定位规定，不能通过z-index进行层次分级 relative:不脱离文档流，参考自身静态位置通过top,bottom,left,right定位，并且可以通过z-index进行层次分级 absolute:脱离文档流，通过top,bottom,left,right定位。选取其最近的父级定位元素，当父级position为static时，absolute元素将以body坐标原点进行定位，可以通过z-index进行层次分级。 fixed:这里他所固定的对像是可视窗口而并非是body或是父级元素。可通过z-index进行层次分级。 relative 相对定位 概念理论:相对定位是一个非常容易掌握的概念。如果对一个元素进行相对定位，它将出现在它自身所在的位置上。然后，可以通过设置垂直或水平位置，让这个元素“相对于”它的起点进行移动。 #box_relative{ position:relative;left:30px;top:20px; } 将在原位置顶部下面20 像素的地方，元素向右移动 30像素。 绝对定位（ absolute) 概念理论:绝对定位的元素的位置相对于最近的已定位祖先元素，如果元素没有已定位的祖先元素，那么它的位置相对于最初的包含块。 固定定位（ fixed） 概念理论:这里他所固定的对像是可视窗口而并非是body或是父级元素。 ###定位的层叠分级： z-index:auto|namber; auto遵从其父对象的定位 namber无单位的整数值。可为负数 浮动 float浮动 属性: float:left|right 影响: 脱离常规文档流而表现为向右或向左浮动(默认的常规文档流：页面内容从上到下，从左到右排列。 DIV块换行显示) 浮动的三大显著特点: DIV块元素失去“块状”换行显示特征，变为行内块元素 紧贴上一个浮动元素（同方向）或父级元素的边框，如宽度不够将换行显示 占据行内元素的空间，导致行内元素围绕显示 注意: 让块级元素在一行上显示，就使用浮动！ 如果是要实现模式转换，推荐使用display。 清楚浮动:clear clear的作用: 如果前一个元素存在左浮动或右浮动，则换行以区隔 只对块级元素有效 clear属性的取值:right|leftboth|none ##清除浮动推荐方法:&gt;1234567891011.clearfix:after&#123; content: &quot;&quot;; height: 0; line-height: 0; display: block; clear: both; visibility: hidden;&#125;.clearfix&#123; zoom: 1;&#125; ##清除浮动的八种方法: 父级div定义 height &gt;&lt;style type=&quot;text/css&quot;&gt; .div1{background:#000020;border:1px solid red;/* 解决代码 */height:200px;} .div2{background:#202020;border:1px solid red;height:100px;margin-top:10px} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD}&lt;/style&gt;&lt;div class=&quot;div1&quot;&gt;&lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;div2&quot;&gt;div2&lt;/div&gt; * 原理：父级div手动定义height，就解决了父级div无法自动获取到高度的问题。 * 优点：简单、代码少、容易掌握。 * 缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题。 * 建议：不推荐使用，只建议高度固定的布局时使用。 结尾处加空div标签 clear:both &gt;&lt;style type=&quot;text/css&quot;&gt; .div1{background:#000020;border:1px solid red} .div2{background:#202020;border:1px solid red;height:100px;margin-top:10px} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD} /* 清除浮动代码 */ .clearfloat{clear:both}&lt;/style&gt;&lt;div class=&quot;div1&quot;&gt;&lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt;&lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt;&lt;div class=&quot;clearfloat&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;div2&quot;&gt;div2&lt;/div&gt; * 原理：添加一个空div，利用css提高的clear:both清除浮动，让父级div能自动获取到高度。 * 优点：简单、代码少、浏览器支持好、不容易出现怪问题。 * 缺点：不少初学者不理解原理；如果页面浮动布局多，就要增加很多空div，让人感觉很不好。 * 建议：不推荐使用，但此方法是以前主要使用的一种清除浮动方法。 父级div定义 伪类:after 和 zoom&gt; .div1{background:#000020;border:1px solid red;} .div2{background:#202020;border:1px solid red;height:100px;margin-top:10px} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD} /*清除浮动代码*/ .clearfloat:after{display:block;clear:both;content:&quot;&quot;;visibility:hidden;height:0} .clearfloat{zoom:1} Left Right div2 原理：IE8以上和非IE浏览器才支持:after，原理和方法2有点类似，zoom(IE转有属性)可解决ie6,ie7浮动问题。 优点：浏览器支持好、不容易出现怪问题（目前：大型网站都有使用，如：腾迅，网易，新浪等等）。 缺点：代码多、不少初学者不理解原理，要两句代码结合使用才能让主流浏览器都支持。 建议：推荐使用，建议定义公共类，以减少CSS代码。 父级div定义 overflow:hidden&gt; .div1{background:#000020;border:1px solid red;/*解决代码*/width:98%;overflow:hidden} .div2{background:#202020;border:1px solid red;height:100px;margin-top:10px;width:98%} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD} Left Right div2 原理：必须定义width或zoom:1，同时不能定义height，使用overflow:hidden时，浏览器会自动检查浮动区域的高度。 优点：简单、代码少、浏览器支持好。 缺点：不能和position配合使用，因为超出的尺寸的会被隐藏。 建议：只推荐没有使用position或对overflow:hidden理解比较深的朋友使用。 父级div定义 overflow:auto&gt; .div1{background:#000020;border:1px solid red;/*解决代码*/width:98%;overflow:auto} .div2{background:#202020;border:1px solid red;height:100px;margin-top:10px;width:98%} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD} &lt;div class=&quot;left&quot;&gt;Left&lt;/div&gt; &lt;div class=&quot;right&quot;&gt;Right&lt;/div&gt; div2 原理：必须定义width或zoom:1，同时不能定义height，使用overflow:auto时，浏览器会自动检查浮动区域的高度。 优点：简单、代码少、浏览器支持好。 缺点：内部宽高超过父级div时，会出现滚动条。 建议：不推荐使用，如果你需要出现滚动条或者确保你的代码不会出现滚动条就使用吧。 * 父级div 也一起浮动 &gt; .div1{background:#000020;border:1px solid red;/解决代码/width:98%;margin-bottom:10px;float:left} .div2{background:#202020;border:1px solid red;height:100px;width:98%;/解决代码/clear:both} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD} Left Right div2 原理：所有代码一起浮动，就变成了一个整体。 优点：没有优点。 缺点：会产生新的浮动问题。 建议：不推荐使用，只作了解。 父级div定义 display:table &gt; .div1{background:#000020;border:1px solid red;/解决代码/width:98%;display:table;margin-bottom:10px;} .div2{background:#202020;border:1px solid red;height:100px;width:98%;} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD} Left Right div2 原理：将div属性变成表格。 优点：没有优点。 缺点：会产生新的未知问题。 建议：不推荐使用，只作了解。 结尾处加 br标签 clear:both&gt; .div1{background:#000020;border:1px solid red;margin-bottom:10px;zoom:1} .div2{background:#202020;border:1px solid red;height:100px} .left{float:left;width:20%;height:200px;background:#DDD} .right{float:right;width:30%;height:80px;background:#DDD} .clearfloat{clear:both} Left Right div2 原理：父级div定义zoom:1来解决IE浮动问题，结尾处加 br标签 clear:both。 建议：不推荐使用，只作了解。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[css从零开始]]></title>
      <url>%2F2017%2F04%2F10%2F0201-css%2F</url>
      <content type="text"><![CDATA[CSS学习简介与作用 CSS 指层叠样式表(Cascading Style Sheets) 样式定义如何显示 HTML 元素 样式表能实现内容与样式的分离 CSS用途：外观美化，布局，定位等 样式通常存储在样式表中 样式表极大地提高了工作效率##CSS书写位置 外联式:创建一个css后缀文件通过&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;a.css&quot; 内联式: 写在标签中&lt;p style=&quot;color: red;&quot;&gt;内联式&lt;/p&gt; 嵌入式 : 写在head里面的style里面;##样式优先级:##CSS语法格式 选择器{属性: 值; 属性: 值;….} div{color: red;} 多条样式规则 1.多个属性间用分号分隔 2.用冒号声明对应属性值 ##选择器: 标签选择器 [element] 类名选择器 .class ID选择器 #id 并集选择器 [element],[element] 后代选择器 div p 子代选择器 div&gt;p 标签指定式选择器 div.class 通配符选择器 *{} CSS类名规则 类名不能以数字开头或者以纯数字定义类名 类名不推荐（不允许）使用汉字定义类名 不能以特殊符号或者以特殊符号开头定义类名（“_”除外） 个人不推荐使用标签名定义类名。 推荐使用有意义的单词定义类名。 有多个单词的命名方式： 使用“ _”分割 如：header_nav —-class推荐 使用“ -”分割 如： header-nav 驼峰式命名 如：headerNav —-id推荐 样式_命名 外套wrap——————用于最外层头部 header—————-用于头部主要内容 main————用于主体内容（中部）左侧 main_left————-左侧布局右侧 main_right———–右侧布局导航条 nav—————–网页菜单导航条内容 content—————用于网页中部主体底部 footer—————–用于底部 样式属性:文字 font-size: 设置文字大小 浏览器默认字体大小16px; font-weight: normal； 默认值设置文字是否加粗显示100-900： 400=noraml 700=bold; font-style: 设置文字是否斜体显示。默认值： normal 文字正常显示。 斜体显示： font-family: 设置文字字体。可以同时设置多个 font属性联写： font: font-style font-weight font-size/line-height font-family 注意:fout属性连写必须有fout-size和fout-family并且fout-size必须在fout-family前 line-height （行高） 行高等于高度可以让文本垂直居中 text-align （对齐） letter-spacing （字符间距） text-decoration （文本修饰 ）###背景属性: background （缩写形式） background-color（背景色 ） background-image（背景图 ） background-repeat（背景图重复方式 ） background-position（位置坐标、偏移量） opacity透明度 不兼容 取值范围0到1之间 0 完全透明 1 不透明 ie9以下的用filter:alpha(opacity=数值); 取值范围0-100 0透明,100不透明 透明图片设置 列表li常用属性 list-style 典型应用导航 ###超链接样式的特殊性 文本或图像加上链接，将失去原样式而继承链接的样式超链接样式的四种状态: 未访问状态（a:link ） 已访问状态（a:visited ） 鼠标移上状态（a:hover ） 激活选定状态（a:active ） 盒子模型(重点) 作用： 进行网页布局（画盒子） 组成： 边框（border）： 盒子的边框 内边距（padding）: 内容与边框之间的距离 外边距（margin）: 盒子与盒子之间的距离 盒子属性,每个属性都有四个方向,可统一设置或四边分开设置属性 margin（外边距/边界） border（边框） border-color 边框颜色 border-width 边框宽度 border-style 边框样式 padding（内边距/填充 ） 元素的实际占位（实际宽、高） 盒子高度 = height属性 + 上下填充高度 + 上下边框高度 盒子宽度 = width属性 + 左右填充宽度 + 左右边框宽度 ##布局方式 实现布局步骤: 分析页面的分块结构，形成HTML组织结构 从外往内 从上往下 从左往右 编写每个DIV块的CSS控制定位]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[HTML从0开始]]></title>
      <url>%2F2017%2F04%2F10%2F0101-html%2F</url>
      <content type="text"><![CDATA[HTML 教程HTML简介 HTML 是用来描述网页的一种语言。 HTML 指的是超文本标记语言 (Hyper TextMarkup Language) HTML 使用标记标签来描述网页 HTML文件的扩展名为.html 或 .htm 编辑工具 Sublime Hbuilder Webstorm ………. 文档结构 一个HTML网页由两部分组成 – head头部部分和body主体部分: 12345678910&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;这是文档的标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 这是文档的内容 --&gt; &lt;/body&gt;&lt;/html&gt; 基本语法 &lt;标记名&gt;最简单的网页&lt;/标记名&gt; &lt;title&gt;我的第一个页面&lt;/title&gt; &lt;标记名 属性名=“ 属性值”&gt;文本&lt;/标记名&gt; &lt;body bgcolor=“red”&gt;背景红色&lt;/body&gt; &lt;标记名&gt; 我想学做网页&lt;br&gt;是呀！我也想学! &lt;html&gt;…&lt;/html&gt;:网页内容以&lt;html&gt;开始&lt;/html&gt; &lt;head&gt;…&lt;/head&gt;(网页头部) &lt;title&gt;…&lt;title&gt;标记 网页标题 &lt;link&gt;标记&lt;link href=“style.css” rel=“stylesheet” type=“text/css”&gt;用于载入外部CSS文件 html01_05HTML基本语法 &lt;meta&gt;标记 描述文档类型、字符编码和搜索关键字 &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt; 提供搜索关键字:&lt;meta name= &quot;keywords&quot; content= &quot;淘宝,网上购物,在线交易,交易市场&quot; /&gt; 内容描述信息，方便搜索引擎的搜索:&lt;meta name= &quot;description&quot; content= &quot;淘宝网-亚洲最大、最安全的网上交易平台，提供各类服饰、美容、家居、数码、 ……&quot; /&gt; &lt;script&gt;…&lt;script&gt; 标记 &lt;script src=“abc.js”&gt;&lt;/script&gt; 当前网页载入一个 abc.js文件 &lt;style&gt;…&lt;style&gt;标记 在此标记之间定义本网页的CSS样式HTML基本语法 …标记 它定义了网页上显示的主要内容与显示格式，是整个网页的核心，网页中要真正现实的内容都包含在本标记中。 &lt;body&gt;有很多属性，这些属性用于设定网页的总体风格，可以定义页面的背景图像、背景颜色、文字颜色、超文本链接的颜色。HTML基本语法 标签(标记)注释标记 格式：&lt;!– 注释内容--&gt; 注释为文中的不同部分加上说明，以方便日后阅读和修改, 注释内容不显示在页面上。 标题标签 h1, h2 … h6是标题标签, 其中: h1是大标题, 一个页面一般只有一个h1; h2常用来表示副标题.水平线标签 &lt;hr /&gt; &lt;hr /&gt;为单个标签的闭合形式 横线用于内容分割 通过 size 和 width 属性设置水平线的尺寸: &lt;hr size=&quot;1&quot; width=&quot;100px&quot;/&gt; &lt;hr size=&quot;2&quot; width=&quot;100&quot;/&gt; &lt;hr size=&quot;4&quot; width=&quot;50%&quot;/&gt; 效果图:html中的数值单位: px (默认就是px) 具体数值 % 就是百分比 表示的是父元素的百分比 文本格式化标签_标签描述 (不推荐使用)| 标签名 | 标签描述 | 预览 | | ------------- |:-------------:|-----------| | `&lt;b&gt;` | 定义粗体文本 |&lt;b&gt;我是b标签&lt;/b&gt;| |`&lt;big&gt;` | 定义大号字 |&lt;big&gt;我是big标签&lt;/big&gt;| | `&lt;em&gt;` | 定义着重文字 |&lt;em&gt;我是em标签&lt;/em&gt;| | `&lt;i&gt;` | 定义斜体字 |&lt;i&gt;我是i标签&lt;/i&gt;| | `&lt;small&gt;` | 定义小号字 |&lt;small&gt;我是small标签&lt;/small&gt;| | `&lt;strong&gt;` | 定义加重语气 |&lt;strong&gt;我是strong标签&lt;/strong&gt;| | `&lt;sub&gt;` | 定义下标字 |你好&lt;sub&gt;我是sub标签&lt;/sub&gt;| | `&lt;sup&gt;` | 定义上标字 |你好&lt;sup&gt;我是sup标签&lt;/sup&gt;| | `&lt;ins&gt;` | 定义插入字 |&lt;ins&gt;我是ins标签&lt;/ins&gt;| | `&lt;del&gt;` | 定义删除字 |&lt;del&gt;我是del标签&lt;/del&gt;| 有序列表 &lt;ol&gt;&lt;/ol&gt; 通过&lt;ol&gt;标签的 start 属性, 可以设置列表的起始值 通过&lt;ol&gt;标签的 type 属性, 可以设置列表中使用的标记类型 有5个值: 1 – 数字; A – 大写母; a – 小写字母; I – 大写罗马数字; i – 小写罗马数字; 效果图:无序列表 &lt;ul&gt;&lt;/ul&gt; type 属性, 可以设置列表中使用的标记类型 disc 默认值。实心圆。 circle 空心圆。 square 实心方块。定义描述标签 dl dt dd dt 标题 dd 描述 表格标签 &lt;table&gt;&lt;/table&gt; &lt;table&gt;标签用来定义表格, 常用属性: border: 表格的边框; width: 表格的宽度; cellpadding: 单元边沿与内容的间距; cellspacing: 单元格之间的空白; &lt;caption&gt;标签用来定义表格标题: caption 必须紧随 table 之后, 一个表格只能有一个标题. &lt;td&gt;和&lt;th&gt;具有两个重要属性, 可以用来合并单元格: colspan: 横向合并单元格; rowspan: 纵向合并单元格; 演示: 分区标签&lt;div&gt;&lt;/div&gt; div标签其实就是一个划分逻辑区域的标签,常用作容器,常用来包含文字.图片等. 图片标签 是图像标签, 它是自闭和标签. src属性(必须): 图片的位置; alt属性(必须): 图片显示不出来时的替代文本. title属性: 鼠标滑过图片时显示的文字提示.范围标签&lt;span&gt; ：显示某行内的独特样式超链接 &lt;a href=&quot;http://www.baidu.com&quot; &gt; 百度 &lt;a/&gt; 语法: &lt;a href=&quot;链接地址&quot; &gt;链接热点文本或图像&lt;/a&gt; target属性: _blank:在新窗口打开被链接的文档 _self:在相同的框架中打开被连接的文档 _parent:在父框架集中打开被连接的文档 _top:在整个窗口中被打开链接的文档 framename: 在指定的框架中打开被连接的文档 锚链接 &lt;a&gt;&lt;a/&gt; 定义一个锚点标记 给一个元素设置一个id a标签的href里面写上#锚点标记特殊符号(字符实体) 空格：&amp;nbsp; 大于(&gt;)：&amp;gt; 小于(&lt;）: &amp;lt; 引号（” ）：&amp;quot;表单 标签代表表单, 它用于向服务器传输数据, 例如搜索框就是一个典型的表单: 常用属性: name: 用于定义表单的名称; action: 一个URL, 定义提交表单时向何处发送数据; method: 定义发送表单数据时的HTTP方法(get/post); POST和GET的区别: get只能提交少量数据; post可以携带大量数据; get提交时数据会在地址栏显示, 安全性差; post方式更加安全; 表单元素的中可以包含各种不同的元素: 表单元素的基本格式 : 语法: &lt;input name=&quot;表单元素名称&quot; type=&quot;类型&quot; value=&quot;值&quot; size=&quot;显示宽度&quot; maxlength=&quot;对大长度&quot; checked=&quot;是否选中&quot; /&gt; name:控件的名称 type:控件类型 value:控件的初始值 size:控件的初始宽度 maxlength:控件的最大长度 checked:控件是否被选中 type类型,作用: 框架的两类用途： 显示多窗口页面—使用框架集 语法: `&lt;frameset cols=&quot;25%,50%,*&quot; rows =&quot;50%,*&quot; border=&quot;5&quot;&gt;` `&lt;frame src=&quot;../example/a.html &quot;&gt;` `&lt;/frameset&gt;` cols :% 作用 :定义框架集中列的数目和尺寸 rows :% 作用:定义框架集中行的数目和尺寸 src : 引用各窗口要显示的网页文件 页面复用—使用&lt;iframe/&gt;内嵌框架 &lt;iframe&gt;语法： &lt;iframe src=&quot;../example/b.html&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt; 实例：&lt;iframe src=&quot;http://www.taobao.com&quot; width=&quot;100%&quot; height=&quot;500&quot;&gt;&lt;/iframe&gt;]]></content>
    </entry>

    
  
  
</search>
